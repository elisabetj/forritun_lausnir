Title: Shapes

Implement three classes,
`Shape`, `Rectangle` (which inherits from `Shape`), and `Square` (which inherits from `Rectangle`)
in their own separate files,
`Shape` in `shape.py`, `Rectangle` in `rectangle.py` and `Square` in `square.py`.

Implement the member methods `get_area()` and `get_perimeter()`
on `Rectangle` and `Square`
(hint: you only have to write the functions once
such that it works for both `Rectangle` and `Square`).

Here are a few items you should have in mind:

- Only implement the `__str__()` method in the `Shape` class:
  - Have it return "{name of class} with area of {area} and perimeter of {perimeter}".
  - To get the name of the class you can use `type(self).__name__`.
- The constructor of `Shape` can be more or less empty (using the `pass` statement).
- The `Shape` class should not implement the `get_area()` and `get_perimeter()` methods.
- The `__str__()` method should output all numbers rounded to 2 places.

Example usage:

    rect = Rectangle(2, 2)
    print(rect.get_area())
    print(rect.get_perimeter())
    print(rect)

    sq = Square(2)
    print(sq.get_area())
    print(sq.get_perimeter())
    print(sq)

Corresponding output:

    4
    8
    Rectangle with area of 4.00 and perimeter of 8.00
    4
    8
    Square with area of 4.00 and perimeter of 8.00
